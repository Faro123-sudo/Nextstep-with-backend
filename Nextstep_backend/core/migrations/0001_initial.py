# Generated by Django 5.2.6 on 2025-09-20 22:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('bug', 'Bug'), ('suggestion', 'Suggestion'), ('query', 'Query'), ('other', 'Other')], default='other', max_length=30)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('closed', 'Closed'), ('resolved', 'Resolved')], default='open', max_length=30)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('handled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_feedbacks', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedbacks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('answers', models.JSONField(blank=True, null=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='core.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('type', models.CharField(choices=[('mcq', 'Multiple Choice'), ('text', 'Text/Long answer'), ('likert', 'Likert scale'), ('slider', 'Slider')], default='mcq', max_length=20)),
                ('options', models.JSONField(blank=True, null=True)),
                ('correct_answer', models.CharField(blank=True, max_length=255, null=True)),
                ('weightage', models.FloatField(default=1.0)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='SuccessStory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('domain', models.CharField(blank=True, max_length=120, null=True)),
                ('story_text', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='success_stories/')),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('content_text', models.TextField(blank=True, help_text='Denormalized text for embeddings/search')),
                ('embedding_id', models.CharField(blank=True, max_length=255, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_stories', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='success_stories', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('guide', 'Guide'), ('infographic', 'Infographic'), ('pdf', 'PDF'), ('slides', 'Slides'), ('other', 'Other')], default='other', max_length=40)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='resources/')),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_text', models.TextField(blank=True, help_text='Denormalized text for embeddings/search')),
                ('embedding_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resources', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='resources', to='core.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Multimedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('video', 'Video'), ('audio', 'Audio'), ('image', 'Image'), ('article', 'Article'), ('other', 'Other')], max_length=20)),
                ('url', models.URLField(blank=True, null=True)),
                ('uploaded_file', models.FileField(blank=True, null=True, upload_to='multimedia/')),
                ('transcript', models.TextField(blank=True)),
                ('rating_avg', models.FloatField(default=0.0)),
                ('rating_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_text', models.TextField(blank=True, help_text='Denormalized text for embeddings/search')),
                ('embedding_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='multimedia', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='multimedia', to='core.tag')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education_level', models.CharField(choices=[('none', 'None'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('diploma', 'Diploma'), ('bachelors', 'Bachelors'), ('masters', 'Masters'), ('phd', 'PhD'), ('other', 'Other')], default='other', max_length=40)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('bio', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('interests', models.ManyToManyField(blank=True, related_name='interested_users', to='core.tag')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('interaction_type', models.CharField(choices=[('view', 'View'), ('like', 'Like'), ('save', 'Save'), ('apply', 'Apply'), ('share', 'Share'), ('dismiss', 'Dismiss')], max_length=20)),
                ('metadata', models.JSONField(blank=True, help_text='Arbitrary event metadata, e.g. {"duration": 12.5, "session":"abc", "device":"mobile"}', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'interaction_type', 'created_at'], name='core_intera_user_id_79afb1_idx'), models.Index(fields=['content_type', 'object_id', 'created_at'], name='core_intera_content_2e700e_idx')],
            },
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(blank=True, db_index=True, max_length=120, null=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('education_path', models.TextField(blank=True)),
                ('expected_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('popularity', models.IntegerField(default=0)),
                ('content_text', models.TextField(blank=True, help_text='Denormalized text for embeddings/search')),
                ('embedding_id', models.CharField(blank=True, max_length=255, null=True)),
                ('required_skills', models.ManyToManyField(blank=True, related_name='careers', to='core.skill')),
                ('tags', models.ManyToManyField(blank=True, related_name='careers', to='core.tag')),
            ],
            options={
                'ordering': ('-created_at',),
                'indexes': [models.Index(fields=['title'], name='core_career_title_9e3ab9_idx'), models.Index(fields=['domain'], name='core_career_domain_9a4fa6_idx')],
            },
        ),
    ]
